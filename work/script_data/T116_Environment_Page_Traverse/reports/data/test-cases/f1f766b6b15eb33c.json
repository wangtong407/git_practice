{"uid":"f1f766b6b15eb33c","name":"进入流程审批Tab","fullName":"script_data.T116_Environment_Page_Traverse.test_case.test_01_process_approval_case.Test_01_case#test_Process_Approval_Workflow_01","historyId":"936c17fff54ccb82234dbae4e4d57cb2","time":{"start":1760491643598,"stop":1760491643598,"duration":0},"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: MicrosoftEdge=140.0.3485.81)\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7bede3f15+18309]\n\t(No symbol) [0x0x7ff7bed515c0]\n\tGetHandleVerifier [0x0x7ff7befd8f4c+2070460]\n\t(No symbol) [0x0x7ff7beb30e1f]\n\t(No symbol) [0x0x7ff7bebc51ac]\n\t(No symbol) [0x0x7ff7bebdc9ba]\n\t(No symbol) [0x0x7ff7bebbf943]\n\t(No symbol) [0x0x7ff7beb938e6]\n\t(No symbol) [0x0x7ff7beb92b52]\n\t(No symbol) [0x0x7ff7beb93723]\n\t(No symbol) [0x0x7ff7bec82f75]\n\t(No symbol) [0x0x7ff7bec8e74d]\n\tGetHandleVerifier [0x0x7ff7bee79603+630387]\n\tGetHandleVerifier [0x0x7ff7bee811a1+662033]\n\t(No symbol) [0x0x7ff7bed5d6a9]\n\t(No symbol) [0x0x7ff7bed57044]\n\t(No symbol) [0x0x7ff7bed57193]\n\t(No symbol) [0x0x7ff7bed4b016]\n\tBaseThreadInitThunk [0x0x7ffb96b0e8d7+23]\n\tRtlUserThreadStart [0x0x7ffb97328d9c+44]","statusTrace":"@pytest.fixture(scope=\"module\", autouse=False)\n    def all_case_fixture():\n        # 用例的前置操作\n>       driver = driver_login_cd()\n                 ^^^^^^^^^^^^^^^^^\n\nconftest.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nconftest.py:95: in driver_login_cd\n    Login(driver).login_fun(\"admin\", \"123456\")\nscript_data\\T116_Environment_Page_Traverse\\Page_Object_Class\\login_page.py:19: in login_fun\n    self.enter_text('css_selector', self.username_input, username)\nscript_data\\T116_Environment_Page_Traverse\\Base_Class\\Base_Page.py:403: in enter_text\n    self.find_element(by_type, locator).send_keys(text)\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nscript_data\\T116_Environment_Page_Traverse\\Base_Class\\Base_Page.py:75: in find_element\n    return self.wait.until(EC.element_to_be_clickable((By.CSS_SELECTOR, locator)))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n..\\..\\Python312\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:129: in until\n    value = method(self._driver)\n            ^^^^^^^^^^^^^^^^^^^^\n..\\..\\Python312\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:622: in _predicate\n    target = driver.find_element(*target)  # grab element at locator\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n..\\..\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:914: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n..\\..\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:447: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001B34FCD0230>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such window\",\"message\":\"no such window: target window already closed\\\\...[0x0x7ff7bed4b016]\\\\n\\\\tBaseThreadInitThunk [0x0x7ffb96b0e8d7+23]\\\\n\\\\tRtlUserThreadStart [0x0x7ffb97328d9c+44]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nE       from unknown error: web view not found\nE         (Session info: MicrosoftEdge=140.0.3485.81)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff7bede3f15+18309]\nE       \t(No symbol) [0x0x7ff7bed515c0]\nE       \tGetHandleVerifier [0x0x7ff7befd8f4c+2070460]\nE       \t(No symbol) [0x0x7ff7beb30e1f]\nE       \t(No symbol) [0x0x7ff7bebc51ac]\nE       \t(No symbol) [0x0x7ff7bebdc9ba]\nE       \t(No symbol) [0x0x7ff7bebbf943]\nE       \t(No symbol) [0x0x7ff7beb938e6]\nE       \t(No symbol) [0x0x7ff7beb92b52]\nE       \t(No symbol) [0x0x7ff7beb93723]\nE       \t(No symbol) [0x0x7ff7bec82f75]\nE       \t(No symbol) [0x0x7ff7bec8e74d]\nE       \tGetHandleVerifier [0x0x7ff7bee79603+630387]\nE       \tGetHandleVerifier [0x0x7ff7bee811a1+662033]\nE       \t(No symbol) [0x0x7ff7bed5d6a9]\nE       \t(No symbol) [0x0x7ff7bed57044]\nE       \t(No symbol) [0x0x7ff7bed57193]\nE       \t(No symbol) [0x0x7ff7bed4b016]\nE       \tBaseThreadInitThunk [0x0x7ffb96b0e8d7+23]\nE       \tRtlUserThreadStart [0x0x7ffb97328d9c+44]\n\n..\\..\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: NoSuchWindowException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1760491635448,"stop":1760491635448,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"_verify_url","time":{"start":1760491635449,"stop":1760491635449,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"all_case_fixture","time":{"start":1760491635449,"stop":1760491643266,"duration":7817},"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: MicrosoftEdge=140.0.3485.81)\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7bede3f15+18309]\n\t(No symbol) [0x0x7ff7bed515c0]\n\tGetHandleVerifier [0x0x7ff7befd8f4c+2070460]\n\t(No symbol) [0x0x7ff7beb30e1f]\n\t(No symbol) [0x0x7ff7bebc51ac]\n\t(No symbol) [0x0x7ff7bebdc9ba]\n\t(No symbol) [0x0x7ff7bebbf943]\n\t(No symbol) [0x0x7ff7beb938e6]\n\t(No symbol) [0x0x7ff7beb92b52]\n\t(No symbol) [0x0x7ff7beb93723]\n\t(No symbol) [0x0x7ff7bec82f75]\n\t(No symbol) [0x0x7ff7bec8e74d]\n\tGetHandleVerifier [0x0x7ff7bee79603+630387]\n\tGetHandleVerifier [0x0x7ff7bee811a1+662033]\n\t(No symbol) [0x0x7ff7bed5d6a9]\n\t(No symbol) [0x0x7ff7bed57044]\n\t(No symbol) [0x0x7ff7bed57193]\n\t(No symbol) [0x0x7ff7bed4b016]\n\tBaseThreadInitThunk [0x0x7ffb96b0e8d7+23]\n\tRtlUserThreadStart [0x0x7ffb97328d9c+44]\n\n","statusTrace":"  File \"C:\\Users\\31646\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pluggy\\_callers.py\", line 38, in run_old_style_hookwrapper\n    res = yield\n          ^^^^^\n  File \"C:\\Users\\31646\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pluggy\\_callers.py\", line 139, in _multicall\n    teardown.throw(exception)\n  File \"C:\\Users\\31646\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"C:\\Users\\31646\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pluggy\\_callers.py\", line 121, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\31646\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\fixtures.py\", line 1195, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\31646\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\fixtures.py\", line 922, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"C:\\Users\\31646\\AppData\\Local\\Programs\\Python\\venv\\work\\conftest.py\", line 29, in all_case_fixture\n    driver = driver_login_cd()\n             ^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\31646\\AppData\\Local\\Programs\\Python\\venv\\work\\conftest.py\", line 95, in driver_login_cd\n    Login(driver).login_fun(\"admin\", \"123456\")\n  File \"C:\\Users\\31646\\AppData\\Local\\Programs\\Python\\venv\\work\\script_data\\T116_Environment_Page_Traverse\\Page_Object_Class\\login_page.py\", line 19, in login_fun\n    self.enter_text('css_selector', self.username_input, username)\n  File \"C:\\Users\\31646\\AppData\\Local\\Programs\\Python\\venv\\work\\script_data\\T116_Environment_Page_Traverse\\Base_Class\\Base_Page.py\", line 403, in enter_text\n    self.find_element(by_type, locator).send_keys(text)\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\31646\\AppData\\Local\\Programs\\Python\\venv\\work\\script_data\\T116_Environment_Page_Traverse\\Base_Class\\Base_Page.py\", line 75, in find_element\n    return self.wait.until(EC.element_to_be_clickable((By.CSS_SELECTOR, locator)))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\31646\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 129, in until\n    value = method(self._driver)\n            ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\31646\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py\", line 622, in _predicate\n    target = driver.find_element(*target)  # grab element at locator\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\31646\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 914, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\31646\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 447, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\31646\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true,"attachmentStep":false,"stepsCount":0}],"afterStages":[],"labels":[{"name":"story","value":"流程审批Tab"},{"name":"feature","value":"流程审批"},{"name":"epic","value":"脚本名称：邦芒综合服务平台页面遍历"},{"name":"tag","value":"smoke"},{"name":"parentSuite","value":"script_data.T116_Environment_Page_Traverse.test_case"},{"name":"suite","value":"test_01_process_approval_case"},{"name":"subSuite","value":"Test_01_case"},{"name":"host","value":"ThinkBook"},{"name":"thread","value":"16392-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"script_data.T116_Environment_Page_Traverse.test_case.test_01_process_approval_case"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":["smoke"]},"source":"f1f766b6b15eb33c.json","parameterValues":[]}